steps:
  - name: 'bash'
    id: 'Set Service Names'
    args:
      - '-c'
      - |
        sed -i '1s;^;service: ${_SERVICE_FRONTEND}\n;' frontend/app.yaml
        sed -i '1s;^;service: ${_SERVICE_BACKEND}\n;' backend/app.yaml

  - name: 'node:20'
    id: 'Build Frontend'
    dir: 'frontend'
    entrypoint: 'bash'
    env:
      - 'VITE_NODE_ENV=${_VITE_NODE_ENV}'
    args:
      - '-c'
      - |
        npm ci
        npm run build
        rm -rf node_modules
        ls -R dist

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy Frontend'
    dir: 'frontend'
    args: ['app', 'deploy', 'app.yaml', '--quiet']

  - name: 'python:3.11'
    id: 'Build Backend'
    dir: 'backend'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pip install --no-cache-dir -r requirements.txt
        ls -R

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy Backend'
    args: ['app', 'deploy', 'backend/app.yaml', '--quiet']
  
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy Dispatch'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ "$_DEPLOY_DISPATCH" = "yes" ]; then
          gcloud app deploy dispatch.yaml --quiet
        elif [ "$_DEPLOY_DISPATCH" = "no" ]; then
          echo "Skipping dispatch.yaml deployment."
        else
          echo "ERROR: Unexpected value for _DEPLOY_DISPATCH: '$$_DEPLOY_DISPATCH'"
          exit 1
        fi

timeout: 900s
options:
  logging: CLOUD_LOGGING_ONLY
  # machineType: "E2_HIGHCPU_8"
